terraform {
  required_version = ">=0.12.0"
}


##############
#Custom Policy
##############

resource "aws_iam_policy" "user_policies" {
  name        = "${var.name}Policy-${count.index}"
  path        = var.path
  description = "User-managed policy assigned to the ${var.name}Role role (generated by Terraform)"
  policy      = var.policy_jsons[count.index]
  count       = length(var.policy_jsons)
}

#########
#Role
#########

resource "aws_iam_role" "this" {
  name               = "${var.name}Role"
  path               = var.path
  description        = "Role assigned to the ${var.name}Profile instance profile (generated by Terraform)"
  assume_role_policy = data.aws_iam_policy_document.assume_role.json
  tags               = var.tags
}

data "aws_iam_policy_document" "assume_role" {
  statement {
    effect = "Allow"

    principals {
      type        = "Service"
      identifiers = ["${var.trusted-service}.amazonaws.com"]
    }

    actions = ["sts:AssumeRole"]
  }
}

#################
#Instance Profile
#################

resource "aws_iam_instance_profile" "main" {
  name = "${var.name}Profile"
  path =  var.path
  role = aws_iam_role.this.name
}

##############
#Attachments
##############

resource "aws_iam_role_policy_attachment" "attached_policies" {
  role       = aws_iam_role.this.name
  policy_arn = var.policy_arns[count.index]
  count      = length(var.policy_arns)
}